logging.level.org.springframework=INFO
logging.level.org.springframework.data.r2dbc=DEBUG

server.port=8082
spring.rsocket.server.port=7000
spring.rsocket.server.mapping-path=rsocket
spring.rsocket.server.transport=websocket

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://192.168.56.1:8080/auth/realms/msa
claims.issuer=${spring.security.oauth2.resourceserver.jwt.issuer-uri}
claims.role=mapped_realm_access
claims.login=preferred_username

#spring.r2dbc.url=r2dbc:postgresql://localhost:5432/postgres
#spring.r2dbc.username=postgres
#spring.r2dbc.password=postgres
#spring.r2dbc.pool.enabled=true

#spring.r2dbc.url=r2dbc:mongodb://localhost:27017/demo
#spring.r2dbc.username=
#spring.r2dbc.password=
#spring.r2dbc.pool.enabled=false

### Configuration producer Spring/Kafka
#spring.kafka.bootstrap-servers=192.168.56.1:9092

#spring.kafka.producer.client-id=testseb
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
